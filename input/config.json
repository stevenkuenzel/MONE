{
    "settings": [
        {
            "name": "RANDOM_SEED",
            "value": "0",
            "replaceBy": "",
            "description": "",
            "type": "Long"
        },
        {
            "name": "EVALUATIONS_MAX",
            "value": "10000",
            "replaceBy": "",
            "description": "",
            "type": "Int"
        },
        {
            "name": "POPULATION_SIZE",
            "value": "100",
            "replaceBy": "",
            "description": "",
            "type": "Int"
        },
        {
            "name": "SEDR_SAMPLES_MIN",
            "value": "3",
            "replaceBy": "",
            "description": "",
            "type": "Int"
        },
        {
            "name": "SEDR_SAMPLES_MAX",
            "value": "15",
            "replaceBy": "",
            "description": "",
            "type": "Int"
        },
        {
            "name": "ALGORITHM",
            "value": "0",
            "replaceBy": "0 = nNEAT, 1 = NEAT-MODS, 2 = NEAT-PS. Multi-selection allowed (separate by comma): 0,1,2",
            "description": "",
            "type": "String"
        },
        {
            "name": "PARAMETER_CONTROLLER",
            "value": "0",
            "replaceBy": "0 = EARPC, 1 = DDYPC, 2 = Default, 3 = Random. Multi-selection allowed (separate by comma): 0,1,2",
            "description": "",
            "type": "String"
        },
        {
            "name": "NNEAT_Q_PROCEDURE",
            "value": "3",
            "replaceBy": "0 = NDR + R2, 1 = R2, 2 = R2 (it), 3 = (NDR + R2, CD). Multi-selection allowed (separate by comma): 0,1,2",
            "description": "",
            "type": "String"
        },
        {
            "name": "EXPORT_PARETO_FRONT_EVERY_GENERATION",
            "value": "false",
            "replaceBy": "",
            "description": "",
            "type": "Boolean"
        },
        {
            "name": "EXPORT_PARETO_FRONT_AFTER_TERMINATION",
            "value": "true",
            "replaceBy": "",
            "description": "",
            "type": "Boolean"
        },
        {
            "name": "THREADS_MAX",
            "value": "8",
            "replaceBy": "",
            "description": "",
            "type": "Int"
        },
        {
            "name": "EXPERIMENT_EVALUATE_SOLUTIONS_CONCURRENTLY",
            "value": "0",
            "replaceBy": "Determines whether the candidate solutions of a single population are evaluated concurrently. Values: 0 = Experiment default, 1 = Force concurrent, 2 = Force sequential.",
            "description": "",
            "type": "Int"
        },
        {
            "name": "EXPERIMENTS_RUN_ALL_CONCURRENTLY",
            "value": "false",
            "replaceBy": "Determines whether all experiment instances are run concurrently.",
            "description": "",
            "type": "Boolean"
        },
        {
            "name": "EXPERIMENT_REPETITIONS",
            "value": "15",
            "replaceBy": "",
            "description": "",
            "type": "Int"
        },
        {
            "name": "EXPERIMENT",
            "value": "0",
            "replaceBy": "0 = DPB, 1 = FTG, 2 = TORCS. Multi-selection allowed (separate by comma): 0,1,2",
            "description": "",
            "type": "String"
        },
        {
            "name": "EXPERIMENT_NOISE",
            "value": "false",
            "replaceBy": "",
            "description": "",
            "type": "Boolean"
        },
        {
            "name": "DPB_VELOCITIES",
            "value": "true",
            "replaceBy": "",
            "description": "",
            "type": "Boolean"
        },
        {
            "name": "FTG_ROUNDS",
            "value": "3",
            "replaceBy": "",
            "description": "",
            "type": "Int"
        },
        {
            "name": "FTG_FRAMES_PER_ROUND",
            "value": "3600",
            "replaceBy": "",
            "description": "",
            "type": "Int"
        },
        {
            "name": "FTG_OPPONENTS",
            "value": "DummyBot,DummyBotFooAI",
            "replaceBy": "DummyBot = Strategy 2, DummyBotFooAI = FooAI fallback. Multi-selection allowed (separate by comma).",
            "description": "",
            "type": "String"
        },
        {
            "name": "TORCS_SIMTORCS",
            "value": "true",
            "replaceBy": "",
            "description": "",
            "type": "Boolean"
        },
        {
            "name": "TORCS_SIMTORCS_TRACKS",
            "value": "Brondehach,!Brondehach",
            "replaceBy": "Tracks must be provided in input/tracks directory as XML-file. '!' in front of the track name denotes, that the track turns are inverted. Multi-selection allowed (separate by comma).",
            "description": "",
            "type": "String"
        },
        {
            "name": "TORCS_SIMTORCS_LEVEL_OF_DETAIL",
            "value": "1",
            "replaceBy": "Any value >= 1. Suggestion: Use 1 for training and a higher value, e.g. 5 for validation.",
            "description": "",
            "type": "Int"
        }
    ]
}